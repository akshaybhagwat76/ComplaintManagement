@using ComplaintManagement.Helpers
@model ComplaintManagement.ViewModel.LOSMasterVM
@{
    ViewBag.Title = "LosReport";
}

@Styles.Render("~/Content/plugins/select2/select2Styles")
<link href="~/Content/fSelect.css" rel="stylesheet" type="text/css" />
<div class="container-fluid">
    <div class="preloader"></div>
    <div class="page-title">
        <h2 class="text-black">XLOS Report</h2>
    </div>
    <div class="card mb-4 rounded-0 border-0">
        <div class="card-body">
            <div class="row justify-content-between">
                <div class="col-md-9">
                    <ul class="nav">
                        <li class="nav-item mr-3">
                            <input type="date" id="fromDate" value="@ViewBag.startDate" class="form-control" placeholder="From Date" />
                        </li>
                        <li class="nav-item mr-3">
                            <input type="date" id="toDate" value="@ViewBag.toDate" class="form-control" placeholder="To Date" />
                        </li>
                        <li class="nav-item mr-3">

                            <div>

                                @Html.DropDownList("typevalues", (IEnumerable<SelectListItem>)ViewBag.typevalues, new { @class = "form-control required" })

                            </div>
                        </li>
                        
                    </ul>
                </div>
                <div class="col-md-3">
                    <ul class="nav">
                        <li class="nav-item mr-2">
                            <button type="button" onclick="filterLosReportGrid()" class="btn btn-danger rounded-circle h-40p w-40p"><i class="fas fa-search"></i></button>
                        </li>
                        <li class="nav-item mr-2">
                            &nbsp; <button type="button" class="btn btn-danger rounded-circle h-40p w-40p" onclick="exportLosReport()"><i class="fas fa-file-excel"></i></button>
                        </li>
                        <li class="nav-item">
                            <a href="javascript:void(0)" class="btn rounded-circle h-40p w-40p btn-outline-danger d-flex align-items-center" id="btnLink"><i class="fas fa-mail-bulk"></i></a>
                        </li>
                        @*<li class="nav-item">
                            <button type="submit" class="btn btn-outline-danger rounded-circle h-40p w-40p" data-toggle="modal" data-target="#uploadFile"><i class="fas fa-upload"></i></button>
                        </li>*@
                    </ul>
                </div>
                
            </div>
        </div>
    </div>

    <div class="user-list">
        <div class="row">
            <div class="col-xl-12 col-lg-12">
                <div class="card mb-4 rounded-0 border-0" id="divLostReport">
                    <!-- Card Body -->

                    @Html.Partial("_XLOS")


                </div>
            </div>
        </div>
    </div>







    <!-- Tab Bar -->

</div>

<div class="modal fade" id="ModalPopUp" role="dialog" style="width:100%">
    <div class="modal-dialog err-pop">
        <div class="modal-content" style="width:700px;height:300px">
            <div class="modal-header" style="background-color:#ff6a00">
                <span style="text-align:center">Send Email</span>
                <button id="DivClose" type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">

                <div>
                    <table style="margin-top:10px;width:100%" cellpadding="10" cellspacing="10">
                        <tr>
                            <td>
                                <label>Involved Users</label>
                            </td>
                            <td>
                                @{
                                    List<SelectListItem> listUser = new List<SelectListItem>();
                                    listUser = new List<SelectListItem>();
                                    listUser.Add(new SelectListItem
                                    {
                                        Text = "",
                                        Value = ""
                                    });
                                    listUser.AddRange(ViewBag.lstUser);
                                }
                                @Html.DropDownList("InvolvedUserId", (List<SelectListItem>)listUser, new { @class = "form-control test required", multiple = "multiple" })

                            </td>
                        </tr>
                        <tr>
                            <td>
                                Comment
                            </td>
                            <td>
                                @Html.TextArea("Comment", new { @class = "form-control comment", @style = "Border-radius:2%" })
                            </td>
                        </tr>

                    </table>



                </div>
                <hr />
                <button type="button" class="btn btn-primary" id="sendemail">Send Mail</button>
            </div>


        </div>
    </div>
</div>


<script src="~/Scripts/fSelect.js"></script>
<script>
    $(function () {

        $('.test').fSelect();


    });
</script>
@Scripts.Render("~/Assets/EditLOSMasters")
<script>
    $("#btnLink").click(function () {
        $('#ModalPopUp').modal('show');
    });
   
    function filterLosReportGrid() {

        //var data = {
        var fromDate = $("#fromDate").val();
        var toDate = $("#toDate").val();
        var losid = $("#typevalues option:selected").val();

        //if ($("#hfCurrentPageIndex").val() == "") {
        //    $("#hfCurrentPageIndex").val("1");
        //}
        // var currentPage = $("#hfCurrentPageIndex").val();

        //}
        StartProcess();
        if (fromDate == "" || toDate == "") {
            StopProcess();
            funToastr(false, "Please select from and to date."); return;
        }

        $.get('/LOS/GetLOSReport', { currentPage: 1, fromDate: fromDate, toDate: toDate, losid: losid }, function (data) {
            if (data.status == "Fail") {
                StopProcess();
                funToastr(false, data.error);
            }
            else {
                StopProcess();
                $("#divLostReport").empty();
                $("#divLostReport").html(data.data.Url);
                //$("#paginator").find('tbody').html(data.data.currentPage);
            }
            // alert(ViewBag.PageCounts);
        });

    }
    //18/12/2020
    function exportLosReport() {
        var fromDate = $("#fromDate").val(); var toDate = $("#toDate").val();
        var losid = $("#typevalues option:selected").val();
        if (fromDate == "" || toDate == "" || losid == "") {
            funToastr(false, "Please select from and to date and a LOSName"); return;
        }
        else {

            if ($("#hfCurrentPageIndex").val() == "") {
                $("#hfCurrentPageIndex").val("1");
            }
            location.href = '/LOS/ExportLDataLOsReport?range=' + fromDate + ',' + toDate + '&losid=' + losid + '&currentPage=' + $("#hfCurrentPageIndex").val();
        }

    }
    //19/12/2020
    function filterXOLReportGrid() {
        var fromDate = $("#fromDate").val(); var toDate = $("#toDate").val();
        var losid = $("typevalues option:selected").val();
        var types = $("#types").val();
        if (fromDate == "" || toDate == "" || types == "" || typevalues == "") {
            funToastr(false, "Please select from and to date and a types and a values"); return;
        }
        else {

            if ($("#hfCurrentPageIndex").val() == "") {
                $("#hfCurrentPageIndex").val("1");
            }
            location.href = '/LOS/GetXOLReport?range=' + fromDate + ',' + toDate + '&types=' + types + '&typevalues=' + typevalues + '&currentPage=' + $("#hfCurrentPageIndex").val();
        }
    }
</script>
@*<script>
        function PagerClick(index) {
            $("#hfCurrentPageIndex").val(index);
            var fromDate = $("#fromDate").val() != undefined ? $("#fromDate").val() : "";
            var toDate = $("#toDate").val() == "undelect from and to date and a types and a values"); return;
        }
            else {

            if ($("#hfCurrentPageIndex").val() == "") {
                $("#hfCurrentPageIndex").val("1");
            }
            location.href = '/LOS/GetXOLReport?range=' + fromDate + ',' + toDate + '&types=' + types + '&typevalues=' + typevalues + '&currentPage=' + $("#hfCurrentPageIndex").val();
        }

    </script>*@
<script>
    function PagerClick(index) {
        var currentPage = $("#hfCurrentPageIndex").val(index);
        var fromDate = $("#fromDate").val();
        var toDate = $("#toDate").val();
        var losid = $("#typevalues option:selected").val();

        StartProcess();
        if (fromDate == "" || toDate == "") {
            StopProcess();
            funToastr(false, "Please select from and to date."); return;
        }

        $.get('/LOS/GetLOSReport', { currentPage: index, fromDate: fromDate, toDate: toDate, losid: losid }, function (data) {
            if (data.status == "Fail") {
                StopProcess();
                funToastr(false, data.error);
            }
            else {
                StopProcess();
                $("#divLostReport").empty();
                $("#divLostReport").html(data.data.Url);
                //$("#paginator").find('tbody').html(data.data.currentPage);
            }
            // alert(ViewBag.PageCounts);
        });
    }

</script>
