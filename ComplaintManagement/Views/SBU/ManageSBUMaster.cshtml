@using ComplaintManagement.Helpers
@model ComplaintManagement.ViewModel.SBUMasterVM
@{
    var user = ""; var userImage = string.Empty;
    int userId = 0;
    var claimsIdentity = User.Identity as System.Security.Claims.ClaimsIdentity;

    if (claimsIdentity != null)
    {
        var c = claimsIdentity.FindFirst(System.Security.Claims.ClaimTypes.Name);
        var cI = claimsIdentity.FindFirst(System.Security.Claims.ClaimTypes.UserData);
        var userIDInfo = claimsIdentity.FindFirst(System.Security.Claims.ClaimTypes.Sid);

        if (c != null && cI != null && userIDInfo != null)
        {

            user = c.Value.ToString();
            userImage = cI.Value.ToString();
            userId = Convert.ToInt32(userIDInfo.Value.ToString());
        }
    }
    ViewBag.Title = "Manage SBU";
    ViewBag.heading = "Masters";
}
@{
    var involveuserid = Model.InvolvedUsersId;
}
<link href="~/Content/fSelect.css" rel="stylesheet" type="text/css" />
<!-- Content Wrapper -->
@Html.Hidden("pageState", (object)ViewBag.ViewState)

        <!-- Begin Page Content -->
        @if (ViewBag.ViewState != null && ViewBag.ViewState == true)
        {
            <a href="/SBU/Index" class="btn btn-danger ml-4" data-toggle="tooltip" data-placement="top" title="Back">&laquo; Back</a> <br /><br />
        }
        <div class="container-fluid">
            <div class="page-title mb-3">
                <h2 class="text-black">@ViewBag.PageType SBU Master</h2>
            </div>
            <!-- Tab Bar -->
            <div class="row">
                <div class="preloader"></div>
                <div class="col-xl-12 col-lg-8">
                    <div class="card shadow mb-4">
                        <!-- Card Body -->
                        <div class="card-body">
                            <form id="myForm" class="m-t" role="form" action="javascript:;">
                                <input type="hidden" value="@Model.Id" id="Id" />
                                <div class="form-group row">
                                    <div class="col-sm-9 mb-3">
                                        @Html.LabelFor(model => model.SBU, new { @class = "requiredLabel" })
                                        @Html.EditorFor(model => model.SBU, new { htmlAttributes = new { @class = "form-control form-control-user required", @placeholder = "SBU", @onfocusout = "checkDuplicate()" } })
                                    </div>


                                    <div class="col-sm-9 mb-3">
                                        <div class="col-md-8 multipleddldiv">
                                            <label>Involved Users</label>
                                            @{
                                                List<SelectListItem> listUser = new List<SelectListItem>();
                                                listUser = new List<SelectListItem>();
                                                listUser.Add(new SelectListItem
                                                {
                                                    Text = "",
                                                    Value = ""
                                                });
                                                listUser.AddRange(ViewBag.lstUser);
                                            }
                                            <br />@Html.DropDownList("InvolvedUsersId", (List<SelectListItem>)listUser, new { @class = "form-control test required", multiple = "multiple" })


                                        </div>
                                        <hr />
                                    </div>





                                    <div class="col-sm-9 mb-3">

                                        @Html.LabelFor(model => model.Status, new { @class = "requiredLabel" })
                                        @{
                                            List<SelectListItem> listItems = new List<SelectListItem>();
                                            listItems = new List<SelectListItem>();
                                            listItems.Add(new SelectListItem
                                            {
                                                Text = "Active",
                                                Value = "true"
                                            });
                                            listItems.Add(new SelectListItem
                                            {
                                                Text = "Inactive",
                                                Value = "false"
                                            });
                                        }
                                        <div>
                                            @Html.DropDownListFor(model => model.Status, (List<SelectListItem>)listItems, new { @class = "form-control required" })
                                        </div>

                                    </div>
                                    <div class="col-sm-12 text-right">
                                        <a href="javascript:void(0)" onclick="submitForm()" class="btn btn-danger" data-toggle="tooltip" data-placement="top" title="Save">Save</a>
                                        <a href="/SBU/Index" class="btn btn-white border" data-toggle="tooltip" data-placement="top" title="Cancel">Cancel</a>
                                        <label id="lblError" class="inline"></label>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
   

<script src="~/Scripts/fSelect.js"></script>
<script>
    $(function () {

        $('.test').fSelect();

         console.log(@involveuserid);
            var involveid = "@involveuserid";
            var selectedOptions = involveid.split(',');

            for(var i in selectedOptions) {
                var optionVal = selectedOptions[i];
                //alert($(".multipleddl").find("option[value=" + optionVal + "]").html());
                $(".multipleddldiv").find("div[data-value=" + optionVal + "]").addClass("selected");
                $(".test").find("option[value=" + optionVal + "]").attr("selected","selected");
            }
    });
</script>
@Scripts.Render("~/Assets/EditSBUMasters")
