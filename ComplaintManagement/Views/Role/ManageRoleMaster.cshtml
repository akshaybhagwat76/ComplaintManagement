@using ComplaintManagement.Helpers
@model ComplaintManagement.ViewModel.RoleMasterVM
@{
    var user = ""; var userImage = string.Empty;
    int userId = 0;
    var claimsIdentity = User.Identity as System.Security.Claims.ClaimsIdentity;

    if (claimsIdentity != null)
    {
        var c = claimsIdentity.FindFirst(System.Security.Claims.ClaimTypes.Name);
        var cI = claimsIdentity.FindFirst(System.Security.Claims.ClaimTypes.UserData);
        var userIDInfo = claimsIdentity.FindFirst(System.Security.Claims.ClaimTypes.Sid);

        if (c != null && cI != null && userIDInfo != null)
        {

            user = c.Value.ToString();
            userImage = cI.Value.ToString();
            userId = Convert.ToInt32(userIDInfo.Value.ToString());
        }
    }
    ViewBag.Title = "Manage Role";
    ViewBag.heading = "Masters";
}

@Html.Hidden("pageState", (object)ViewBag.ViewState)

        <!-- Begin Page Content -->
        @if (ViewBag.ViewState != null && ViewBag.ViewState == true)
        {
            <a href="/Role/Index" class="btn btn-danger ml-4" data-toggle="tooltip" data-placement="top" title="Back">&laquo; Back</a> <br /><br />
        }
        <div class="container-fluid">
            <div class="page-title mb-3">
                <h2 class="text-black">@ViewBag.PageType Role Master</h2>
            </div>
            <!-- Tab Bar -->
            <div class="row">
                <div class="preloader"></div>
                <div class="col-xl-12 col-lg-8">
                    <div class="card shadow mb-4">
                        <!-- Card Body -->
                        <div class="card-body">
                            <form id="myForm" class="m-t" role="form" action="javascript:;">
                                <input type="hidden" value="@Model.Id" id="Id" />
                                <div class="form-group row">
                                    <div class="col-sm-9 mb-3">
                                        @Html.LabelFor(model => model.UserId, new { @class = "requiredLabel" })
                                        @{
                                            List<SelectListItem> listUser = new List<SelectListItem>();
                                            listUser = new List<SelectListItem>();
                                            listUser.Add(new SelectListItem
                                            {
                                                Text = "",
                                                Value = ""
                                            });
                                            listUser.AddRange(ViewBag.lstUser);
                                        }

                                        @Html.DropDownListFor(model => model.UserId, (List<SelectListItem>)listUser, new { @class = "form-control required" })

                                    </div>

                                    <div class="col-sm-9 mb-3">

                                        @Html.LabelFor(model => model.LOSId)
                                        @Html.Hidden("LOSIds", Model.LOSId)
                                        <div class="container">
                                            <div class="row justify-content-md-right">
                                                <div class="col col-lg-6">
                                                    @{
                                                        foreach (var priv in ViewBag.lstLOS)
                                                        {
                                                            <label class="checkbox-inline"><input name="losList" id="@string.Format("los-"+priv.Value)" type="checkbox" value="@priv.Value" class="checks-los">&nbsp; @priv.Text</label>
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                        <label id="lblErrorLOS" class="inline"></label>
                                    </div>

                                    <div class="col-sm-9 mb-3">

                                        @Html.LabelFor(model => model.SBUId)
                                        @Html.Hidden("SBUIds", Model.SBUId)
                                        <div class="container">
                                            <div class="row justify-content-md-right">
                                                <div class="col col-lg-6">
                                                    @{
                                                        foreach (var priv in ViewBag.lstSBU)
                                                        {
                                                            <label class="checkbox-inline"><input name="sbuList" id="@string.Format("sbu-"+priv.Value)" type="checkbox" value="@priv.Value" class="checks-sbu">&nbsp; @priv.Text</label>
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                        <label id="lblErrorSbu" class="inline"></label>
                                    </div>
                                    <div class="col-sm-9 mb-3">
                                        @Html.LabelFor(model => model.SubSBUId)
                                        @Html.Hidden("SubSBUIds", Model.SubSBUId)

                                        <div class="container">
                                            <div class="row justify-content-md-right">
                                                <div class="col col-lg-6">
                                                    @{
                                                        foreach (var priv in ViewBag.lstSubSBU)
                                                        {
                                                            <label class="checkbox-inline"><input name="subsbuList" id="@string.Format("subsbu-"+priv.Value)" type="checkbox" value="@priv.Value" class="checks-subsbu">&nbsp; @priv.Text</label>
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                        <label id="lblErrorSubSbu" class="inline"></label>
                                    </div>
                                    <div class="col-sm-9 mb-3">
                                        @Html.LabelFor(model => model.CompetencyId)
                                        @Html.Hidden("CompentencyIds", Model.CompetencyId)

                                        <div class="container">
                                            <div class="row justify-content-md-right">
                                                <div class="col col-lg-6">
                                                    @{
                                                        foreach (var priv in ViewBag.lstCompetency)
                                                        {
                                                            <label class="checkbox-inline"><input name="CompetencyList" id="@string.Format("Competency-"+priv.Value)" type="checkbox" value="@priv.Value" class="checks-Competency">&nbsp; @priv.Text</label>
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                        <label id="lblErrorCompetency" class="inline"></label>
                                    </div>
                                    <div class="col-sm-9 mb-3 mb-sm-0">
                                        @Html.LabelFor(model => model.Status, new { @class = "requiredLabel" })
                                        @{
                                            List<SelectListItem> listItems = new List<SelectListItem>();
                                            listItems = new List<SelectListItem>();
                                            listItems.Add(new SelectListItem
                                            {
                                                Text = "Active",
                                                Value = "true"
                                            });
                                            listItems.Add(new SelectListItem
                                            {
                                                Text = "Inactive",
                                                Value = "false"
                                            });
                                        }
                                        <div>
                                            @Html.DropDownListFor(model => model.Status, (List<SelectListItem>)listItems, new { @class = "form-control required" })
                                        </div>

                                    </div>
                                    <div class="col-sm-12 text-right">
                                        <a href="javascript:void(0)" onclick="submitForm()" class="btn btn-danger" data-toggle="tooltip" data-placement="top" title="Save">Save</a>
                                        <a href="/Role/Index" class="btn btn-white border" data-toggle="tooltip" data-placement="top" title="Cancel">Cancel</a>
                                        <label id="lblError" class="inline"></label>
                                    </div>
                                </div>
                            </form>

                        </div>
                    </div>
                </div>
            </div>
        </div>
   
@Scripts.Render("~/Assets/EditRoleMaster")