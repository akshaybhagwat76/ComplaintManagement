@using ComplaintManagement.Helpers
@model ComplaintManagement.ViewModel.UserMasterVM
@{
    var user = ""; var userImage = string.Empty;
    int userId = 0;
    var claimsIdentity = User.Identity as System.Security.Claims.ClaimsIdentity;

    if (claimsIdentity != null)
    {
        var c = claimsIdentity.FindFirst(System.Security.Claims.ClaimTypes.Name);
        var cI = claimsIdentity.FindFirst(System.Security.Claims.ClaimTypes.UserData);
        var userIDInfo = claimsIdentity.FindFirst(System.Security.Claims.ClaimTypes.Sid);

        if (c != null && cI != null && userIDInfo != null)
        {

            user = c.Value.ToString();
            userImage = cI.Value.ToString();
            userId = Convert.ToInt32(userIDInfo.Value.ToString());
        }
    }
    ViewBag.Title = "Manage User";
    ViewBag.heading = "Masters";
    dynamic SBUdata = Json.Encode(ViewBag.lstSBU);
    dynamic SubSBUdata = Json.Encode(ViewBag.lstSubSBU);
    dynamic Competency = Json.Encode(ViewBag.lstCompetency);
}

@Html.Hidden("pageState", (object)ViewBag.ViewState)
@Html.Hidden("hdnSBUList", (object)SBUdata)
@Html.Hidden("hdnSubSBUList", (object)SubSBUdata)
@Html.Hidden("hdnCompentencyList", (object)Competency)


        <!-- Begin Page Content -->
        @if (ViewBag.ViewState != null && ViewBag.ViewState == true)
        {
            <a href="/UserMaster/Index" class="btn btn-danger ml-4" data-toggle="tooltip" data-placement="top" title="Back">&laquo; Back</a> <br /><br />
        }
        
            <div class="page-title mb-3">
                <h2 class="text-black">@ViewBag.PageType User Master</h2>
            </div>
            <!-- Tab Bar -->
            <div class="row">
                <div class="preloader"></div>
                <div class="col-xl-4 col-lg-5">
                    <div class="card shadow mb-4 rounded-0">
                        <!-- Card Body -->
                        <div class="card-body">
                            <input type="hidden" value="@Model.Id" id="Id" />
                            @*<div class="text-center form-group">
                                    <i class="far fa-user-circle f-s-100 text-danger f-111"></i>
                                </div>*@
                            <i class="fa fa-trash" style="margin-left: 180px; margin-top: 7px;" onclick="RemoveImage('@Model.ImagePath')"></i>
                            <div class="text-center form-group ">
                                <label title="Upload image file" for="inputImage">

                                    <input type="file" accept="image/*" name="file" id="inputImage" onchange="encodeImagetoBase64($event)" onfocus="" class="hide">
                                    <img id='profile_pic' data-src="" src="@(!string.IsNullOrEmpty(Model.ImagePath)? "/Images/profile_pics/"+Model.ImagePath : "/Images/profile.png")" style='cursor:pointer;height:auto;width:100%;max-width:120px' />
                                </label>
                                <div class="profile-img-i-container">
                                    <i class="fa fa-remove"></i>
                                </div>
                            </div>

                            <form id="myForm" class="m-t" role="form" action="javascript:;">
                                <div class="form-group">
                                    @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control form-control-user required", @placeholder = "Name" } })

                                </div>
                                <div class="form-group">
                                    @Html.EditorFor(model => model.EmployeeId, new { htmlAttributes = new { @class = "form-control form-control-user required", @placeholder = "Employee ID", @onfocusout = "checkDuplicate()" } })

                                </div>
                                <div class="form-group row">
                                    <div class="col-sm-6 mb-3 mb-sm-0 text-center">

                                        @Html.DropDownListFor(model => model.Gender,
                 new List<SelectListItem> {
                      new SelectListItem { Value = "Male" , Text = "Male" },
                      new SelectListItem { Value = "Female" , Text = "Female" },

                   },
                 new { @class = "form-control mt-2" })
                                        @Html.LabelFor(model => model.Gender)
                                    </div>
                                    <div class="col-sm-6 text-center">

                                        @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control form-control-user required mt-2", @placeholder = "Age", @min = "0" } })
                                        @Html.LabelFor(model => model.Age, new { @class = "requiredLabel" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.EditorFor(model => model.WorkEmail, new { htmlAttributes = new { @class = "form-control form-control-user required", @placeholder = "Work Email", @onfocusout = "checkDuplicate()" } })

                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="col-xl-8 col-lg-7">
                    <div class="card shadow mb-4 rounded-0 border-0">
                        <!-- Card Body -->
                        <div class="card-body">
                            <form class="user" id="myForm">
                                <div class="form-group row">
                                    <div class="col-sm-4 mb-3">
                                        @Html.LabelFor(model => model.TimeType, new { @class = "requiredLabel" })
                                        @Html.DropDownListFor(model => model.TimeType,
                 new List<SelectListItem> {
                      new SelectListItem { Value = "Full Time" , Text = "Full Time" },
                      new SelectListItem { Value = "Part Time" , Text = "Part Time" },

                   },
                 new { @class = "form-control required" })
                                    </div>
                                    <div class="col-sm-4">
                                        @Html.LabelFor(model => model.BusinessTitle, new { @class = "requiredLabel" })

                                        @{
                                            List<SelectListItem> listBusinessTitle = new List<SelectListItem>();
                                            listBusinessTitle = new List<SelectListItem>();
                                            listBusinessTitle.Add(new SelectListItem
                                            {
                                                Text = "",
                                                Value = ""
                                            });
                                            listBusinessTitle.AddRange(ViewBag.lstDesignation);
                                        }

                                        @Html.DropDownListFor(model => model.BusinessTitle, (List<SelectListItem>)listBusinessTitle, new { @class = "form-control required" })


                                    </div>
                                    <div class="col-sm-4">
                                        @Html.LabelFor(model => model.Company, new { @class = "requiredLabel" })

                                        @{
                                            List<SelectListItem> listCompany = new List<SelectListItem>();
                                            listCompany = new List<SelectListItem>();
                                            listCompany.Add(new SelectListItem
                                            {
                                                Text = "",
                                                Value = ""
                                            });
                                            listCompany.AddRange(ViewBag.lstEntity);
                                        }

                                        @Html.DropDownListFor(model => model.Company, (List<SelectListItem>)listCompany, new { @class = "form-control required" })

                                    </div>
                                </div>
                                <hr>
                                <div class="form-group row">
                                    <div class="col-sm-4 mb-3 mb-sm-0">
                                        @Html.LabelFor(model => model.LOSId, new { @class = "requiredLabel" })

                                        @{
                                            List<SelectListItem> listLOS = new List<SelectListItem>();
                                            listLOS = new List<SelectListItem>();
                                            listLOS.Add(new SelectListItem
                                            {
                                                Text = "",
                                                Value = ""
                                            });
                                            listLOS.AddRange(ViewBag.lstLOS);
                                        }

                                        @Html.DropDownListFor(model => model.LOSId, (List<SelectListItem>)listLOS, new { @class = "form-control required", @onchange = "GetLOSSettings()" })

                                    </div>
                                    <div class="col-sm-4">
                                        @Html.LabelFor(model => model.SBUId, new { @class = "requiredLabel" })

                                        @{
                                            List<SelectListItem> listSBU = new List<SelectListItem>();
                                            listSBU = new List<SelectListItem>();
                                            listSBU.Add(new SelectListItem
                                            {
                                                Text = "",
                                                Value = ""
                                            });
                                            listSBU.AddRange(ViewBag.lstSBU);
                                        }

                                        @Html.DropDownListFor(model => model.SBUId, (List<SelectListItem>)listSBU, new { @class = "form-control required" })

                                    </div>
                                    <div class="col-sm-4">
                                        @Html.LabelFor(model => model.SubSBUId, new { @class = "requiredLabel" })

                                        @{
                                            List<SelectListItem> listSubSBU = new List<SelectListItem>();
                                            listSubSBU = new List<SelectListItem>();
                                            listSubSBU.Add(new SelectListItem
                                            {
                                                Text = "",
                                                Value = ""
                                            });
                                            listSubSBU.AddRange(ViewBag.lstSubSBU);
                                        }

                                        @Html.DropDownListFor(model => model.SubSBUId, (List<SelectListItem>)listSubSBU, new { @class = "form-control required" })

                                    </div>
                                </div>
                                <hr>
                                <div class="form-group row">
                                    <div class="col-sm-4 mb-3 mb-sm-0">
                                        @Html.LabelFor(model => model.CompentencyId, new { @class = "requiredLabel" })

                                        @{
                                            List<SelectListItem> listCompentency = new List<SelectListItem>();
                                            listCompentency = new List<SelectListItem>();
                                            listCompentency.Add(new SelectListItem
                                            {
                                                Text = "",
                                                Value = ""
                                            });
                                            listCompentency.AddRange(ViewBag.lstCompetency);
                                        }

                                        @Html.DropDownListFor(model => model.CompentencyId, (List<SelectListItem>)listCompentency, new { @class = "form-control required" })

                                    </div>
                                    <div class="col-sm-4">
                                        @Html.LabelFor(model => model.LocationId, new { @class = "requiredLabel" })

                                        @{
                                            List<SelectListItem> listLocation = new List<SelectListItem>();
                                            listLocation = new List<SelectListItem>();
                                            listLocation.Add(new SelectListItem
                                            {
                                                Text = "",
                                                Value = ""
                                            });
                                            listLocation.AddRange(ViewBag.lstLocation);
                                        }

                                        @Html.DropDownListFor(model => model.LocationId, (List<SelectListItem>)listLocation, new { @class = "form-control required" })

                                    </div>
                                    <div class="col-sm-4">
                                        @Html.LabelFor(model => model.RegionId, new { @class = "requiredLabel" })

                                        @{
                                            List<SelectListItem> listRegion = new List<SelectListItem>();
                                            listRegion = new List<SelectListItem>();
                                            listRegion.Add(new SelectListItem
                                            {
                                                Text = "",
                                                Value = ""
                                            });
                                            listRegion.AddRange(ViewBag.lstRegion);
                                        }

                                        @Html.DropDownListFor(model => model.RegionId, (List<SelectListItem>)listRegion, new { @class = "form-control required" })

                                    </div>
                                </div>
                                <hr>
                                <div class="form-group row">
                                    <div class="col-sm-4 mb-3 mb-sm-0">
                                        @Html.LabelFor(model => model.DateOfJoining, new { @type = "Date" })
                                        @Html.TextBoxFor(model => model.DateOfJoining, new { @type = "Date", @class = "form-control form-control-user required", @placeholder = "Name" })

                                    </div>
                                    <div class="col-sm-4">
                                        @Html.LabelFor(model => model.MobileNo, new { @class = "requiredLabel" })
                                        @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control form-control-user required", @placeholder = "Mobile No", @minlength = "10", @maxlength = "10" } })

                                    </div>
                                    <div class="col-sm-4">
                                        @Html.LabelFor(model => model.Manager, new { @class = "requiredLabel" })
                                        @Html.EditorFor(model => model.Manager, new { htmlAttributes = new { @class = "form-control form-control-user required", @placeholder = "Manager" } })
                                    </div>
                                </div>
                                <hr>
                                <div class="form-group row">
                                    <div class="col-sm-4 mb-3 mb-sm-0">
                                        @Html.LabelFor(model => model.Type, new { @class = "requiredLabel" })
                                        @Html.DropDownListFor(model => model.Type,
                 new List<SelectListItem> {
                      new SelectListItem { Value = "Normal" , Text = "Normal" },
                      new SelectListItem { Value = "Admin" , Text = "Admin" },
                      new SelectListItem { Value = "HR" , Text = "HR" },
                      new SelectListItem { Value = "Lead" , Text = "Lead" }
                   },
                 new { @class = "form-control" })
                                    </div>
                                    <div class="col-sm-4 mb-3 mb-sm-0">
                                        @Html.LabelFor(model => model.Status, new { @class = "requiredLabel" })
                                        @{
                                            List<SelectListItem> listItems = new List<SelectListItem>();
                                            listItems = new List<SelectListItem>();
                                            listItems.Add(new SelectListItem
                                            {
                                                Text = "Active",
                                                Value = "true"
                                            });
                                            listItems.Add(new SelectListItem
                                            {
                                                Text = "Inactive",
                                                Value = "false"
                                            });
                                        }

                                        <div>
                                            @Html.DropDownListFor(model => model.Status, (List<SelectListItem>)listItems, new { @class = "form-control required" })
                                        </div>

                                    </div>
                                </div>
                                @Html.Hidden("Doj", Model.DateOfJoining.HasValue ? Model.DateOfJoining.Value.ToString("yyyy/MM/dd") : "")


                                <div class="col-sm-12 text-right">
                                    <a href="javascript:void(0)" onclick="submitForm()" class="btn btn-danger" data-toggle="tooltip" data-placement="top" title="Save">Save</a>
                                    <a href="/UserMaster/Index" class="btn btn-white border" data-toggle="tooltip" data-placement="top" title="Cancel">Cancel</a>
                                    <label id="lblError" class="inline"></label>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>

        
<!-- End of Content Wrapper -->
@Html.Partial("_CommonDeleteModal")


<script src="~/Scripts/jquery-ui.min.js"></script>
<link href="~/Content/plugins/blitzer/jquery-ui.css" rel="stylesheet" />
@Scripts.Render("~/Assets/EditUserMasters")